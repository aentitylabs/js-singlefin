{"version":3,"file":"singlefin.js","mappings":"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","sources":["webpack://jssinglefin/webpack/universalModuleDefinition","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/influencer/follower.ts","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/influencer/influencer.ts","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/influencer/nullstate.ts","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/influencer/state.ts","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/singlefin.ts","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/singlefinsource.ts","webpack://jssinglefin/external commonjs \"js-entity-store\"","webpack://jssinglefin/external commonjs \"js-http-routing-engine\"","webpack://jssinglefin/webpack/bootstrap","webpack://jssinglefin/./home/eagudio/work/aentity/workspace/js-singlefin/src/main.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jssinglefin\"] = factory();\n\telse\n\t\troot[\"jssinglefin\"] = factory();\n})(this, function() {\nreturn ","import { Influencer } from \"./influencer\";\nimport { NullState } from \"./nullstate\";\nimport { State } from \"./state\";\n\nexport class Follower {\n    private _name: string;\n    private _state: State = new NullState();\n    private _influencers: Influencer[] = [];\n    private _states: any = {};\n    private _trendStates: any = {};\n\n\n    public constructor(name: string) {\n        this._name = name;\n    }\n\n    public get name() {\n        return this._name;\n    }\n    \n    public addInfluencer(influencer: Influencer) {\n        this._influencers.push(influencer);\n    }\n\n    public addState(stateName: string, state: State) {\n        state.name = stateName;\n\n        this._states[stateName] = state;\n    }\n\n    public subscribe(influencer: Influencer) {\n        this.addInfluencer(influencer);\n\n        influencer.subscribe(this);\n    }\n\n    public follow(trend: string) {\n        this._influencers.forEach((influencer: Influencer) => {\n            influencer.follow(trend, this._name);\n        });\n    }\n\n    public on(trend: string, state: string) {\n        this._trendStates[trend] = this._states[state];\n    }\n\n    public changeState(state: string) {\n        this._state = this._states[state];\n    }\n\n    public handle(trend: string, model: any): void {\n        this._state.handle(this, trend, model);\n    }\n\n    public onTrendChange(trend: string, model: any): void {\n        if(this._trendStates[trend]) {\n            this._state = this._trendStates[trend];\n        }\n        \n        this.handle(trend, model);\n    }\n\n    public set state(state: State) {\n        this._state = state;\n    }\n\n    public serialize(): any {\n        return {\n            name: this._name,\n            state: this._state.name\n        }\n    }\n\n    public deserialize(follower: any) {\n        this._name = follower.name;\n        this._state = this._states[follower.state];\n    }\n}","import { Follower } from \"./follower\";\n\nexport class Influencer {\n    protected _followers: any = {};\n    protected _trends: any = {};\n\n\n    public subscribe(follower: Follower){\n        this._followers[follower.name] = follower;\n    }\n\n    public init(trends: any) {\n        for(const key in trends) {\n            const followers = trends[key];\n\n            for(let i=0; i<followers.length; i++) {\n                if(this._followers[followers[i].name]) {\n                    const follower = this._followers[followers[i].name];\n\n                    follower.deserialize(followers[i]);\n                }\n            }\n        }\n    }\n\n    public follow(trend: string, follower: string) {\n        if(!this._trends[trend]) {\n            this._trends[trend] = [];\n        }\n        \n        this._trends[trend].push(this._followers[follower]);\n    }\n\n    public newTrend(trend: string, model: any) {\n        const followers = this._trends[trend];\n\n        if(!followers) {\n            return;\n        }\n\n        for(let i=0; i<followers.length; i++) {\n            followers[i].onTrendChange(trend, model);\n        }\n    }\n\n    public serialize(): any {\n        const influencer: any = {\n            followers: {}\n        };\n\n        for(const key in this._followers) {\n            const follower = this._followers[key];\n            \n            influencer.followers[key] = follower.serialize();\n        }\n\n        return influencer;\n    }\n}","import { Follower } from \"./follower\";\nimport { State } from \"./state\";\n\nexport class NullState extends State {\n    public handle(follower: Follower, trend: string, model: any): void {\n        \n    }\n}","import { Follower } from \"./follower\";\n\nexport abstract class State {\n    private _name: string = \"\";\n\n\n    public set name(name: string) {\n        this._name = name;\n    }\n\n    public get name() {\n        return this._name;\n    }\n\n    public abstract handle(follower: Follower, trend: string, model: any): void;\n}","import { Influencer } from \"./influencer/influencer\";\nimport { EntityStore } from \"js-entity-store\"\nimport { EntityFactory } from \"js-entity-store\";\nimport { Source } from \"js-entity-store\";\nimport { Bridge } from \"js-entity-store\";\nimport { SinglefinSource } from \"./singlefinsource\";\nimport { ModelLoader } from \"./modelloader\";\nimport { HttpRoutingEngine } from \"js-http-routing-engine\";\n\n\nexport class Singlefin extends Influencer {\n    private _entityStore: EntityStore = new EntityStore();\n    private _model: any;\n    private _currentTrend: any;\n\n    public constructor() {\n        super();\n\n        this._currentTrend = EntityFactory.newEntity(this._entityStore, {\n            \"entity\": \"Singlefin\",\n            \"ref\": false,\n            \"properties\": {\n                \"trend\": {\n                    \"value\": \"\"\n                },\n                \"trends\": {\n                    \"value\": {}\n                }\n            }\n        });\n\n        this._entityStore.addSource(\"Singlefin\", new SinglefinSource());\n    }\n\n    public loadModel(modelLoader: ModelLoader) {\n        return new Promise<void>((resolve, reject) => {\n            modelLoader.load((model: any) => {\n                this._model = EntityFactory.newEntity(this._entityStore, model);\n\n                resolve();\n            });\n        });\n    }\n\n    public setModel(model: any) {\n        this._model = EntityFactory.newEntity(this._entityStore, model);\n    }\n\n    public get model(): any {\n        return this._model;\n    }\n\n    public addSource(entityName: string, source: Source) {\n        this._entityStore.addSource(entityName, source);\n    }\n\n    public run() {\n        const httpRoutingEngine = new HttpRoutingEngine();\n\n        httpRoutingEngine.render({}, undefined, this._model);\n    }\n\n    public inform(trend: string) {\n        const followers = this._trends[trend];\n\n        this._currentTrend.trend = trend;\n        this._currentTrend.trends[trend] = this.serializeFollowers(followers);\n\n        this._entityStore.sync();\n\n        this.newTrend(trend, this._model);\n\n        this._entityStore.sync();\n    }\n\n    public informTo(bridge: Bridge, trend: string) {\n        const followers = this._trends[trend];\n\n        this._currentTrend.trend = trend;\n        this._currentTrend.trends[trend] = this.serializeFollowers(followers);\n\n        return this._entityStore.syncTo(bridge).then(() => {\n            this.init(this._currentTrend.trends);\n\n            this.newTrend(this._currentTrend.trend, this._model);\n\n            return this._entityStore.syncTo(bridge);\n        });\n    }\n\n    public informFrom(bridge: Bridge, actions: any) {\n        this._entityStore.syncFrom(bridge, actions, () => {\n            this.init(this._currentTrend.trends);\n\n            this.newTrend(this._currentTrend.trend, this._model);\n\n            const followers = this._trends[this._currentTrend.trend];\n\n            this._currentTrend.trends[this._currentTrend.trend] = this.serializeFollowers(followers);\n        });\n    }\n\n    private serializeFollowers(followers: any[]) {\n        const serializedFollowers = [];\n\n        for(let i=0; i<followers.length; i++) {\n            serializedFollowers.push(followers[i].serialize());\n        }\n\n        return serializedFollowers;\n    }\n}\n","import { Source } from \"js-entity-store\";\n\nexport class SinglefinSource extends Source {\n    public load(entity: any) {\n        return entity;\n    }\n    public update(entity: any) {\n        return entity;\n    }\n    public delete(entity: any): void {\n    }\n    \n}","module.exports = require(\"js-entity-store\");","module.exports = require(\"js-http-routing-engine\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Singlefin } from \"./singlefin\";\nimport { Follower } from \"./influencer/follower\";\nimport { ModelLoader } from \"./modelloader\";\nimport { State } from \"./influencer/state\";\n\nexport { Singlefin, Follower, ModelLoader, State }"],"names":["root","factory","exports","module","define","amd","this","name","_state","NullState","_influencers","_states","_trendStates","_name","addInfluencer","influencer","push","addState","stateName","state","subscribe","follow","trend","forEach","on","changeState","handle","model","onTrendChange","serialize","deserialize","follower","_followers","_trends","init","trends","key","followers","i","length","newTrend","State","Singlefin","Influencer","super","_entityStore","EntityStore","_currentTrend","EntityFactory","newEntity","addSource","SinglefinSource","loadModel","modelLoader","Promise","resolve","reject","load","_model","setModel","entityName","source","run","HttpRoutingEngine","render","undefined","inform","serializeFollowers","sync","informTo","bridge","syncTo","then","informFrom","actions","syncFrom","serializedFollowers","Source","entity","update","delete","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Follower"],"sourceRoot":""}